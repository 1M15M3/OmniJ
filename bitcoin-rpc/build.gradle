plugins {
    id 'groovy'
    id 'application'
    id 'maven'
    id 'com.github.johnrengelman.shadow' version '1.2.1'
}

sourceCompatibility = 1.7
group = 'com.msgilligan'
version = '0.2'

configurations {
    robovm
}

dependencies {
    compile 'com.fasterxml.jackson.core:jackson-core:2.3.2'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.3.3'
    compile 'commons-cli:commons-cli:1.2'

    robovm  "org.codehaus.groovy:groovy:${groovyVersion}:grooid"

    compile "org.codehaus.groovy:groovy:${groovyVersion}"
    compile "org.codehaus.groovy:groovy-json:${groovyVersion}"
//    compile 'org.bitcoinj:bitcoinj-core:0.12.2'

    testCompile("org.spockframework:spock-core:1.0-groovy-2.4") {
        exclude module: "groovy-all"
    }

}

//compileJava {
//    options.compilerArgs << '-Xlint:unchecked'
//}

mainClassName = "com.msgilligan.bitcoin.cli.BitcoinJCli"
def roboExeName = "bitcoinj-cli"

jar {
    manifest {
        attributes 'Implementation-Title': 'bitcoinj CLI client', 'Implementation-Version': version, 'Consensus-Class': mainClassName
    }
}

shadowJar {
    baseName = 'bitcoinj-cli'
    classifier = ''
}

def homePath = System.properties['user.home']
def roboVMHome = "${homePath}/robovm-1.0.0-beta-04"
def roboLibPath = "robolib"

task copyToRoboLib(type: Copy) {
    into roboLibPath
    from configurations.runtime
}

task roboCompile(type:Exec, dependsOn: [classes, copyToRoboLib]) {
    executable "${roboVMHome}/bin/robovm"
    args '-verbose', '-debug',
            '-cp', "build/classes/main:${roboLibPath}/commons-cli-1.2.jar:${roboLibPath}/jackson-core-2.3.3.jar:${roboLibPath}/jackson-databind-2.3.3.jar:${roboLibPath}/jackson-annotations-2.3.0.jar",
            '-d', 'build',
            '-forcelinkclasses', 'com.android.okhttp.HttpHandler:com.android.org.conscrypt.OpenSSLSocketFactoryImpl',

            '-o', "${roboExeName}",
            "${mainClassName}"
}

task roboRun(type:Exec, dependsOn: roboCompile) {
    executable "build/${roboExeName}"
    args '-rvm:log=debug'
}

// Test Structure
sourceSets {
    integrationTest {
        compileClasspath = sourceSets.main.output + configurations.testRuntime
        runtimeClasspath = output + sourceSets.main.output + configurations.testRuntime
        groovy {
            srcDir 'src/integ/groovy'
        }
        resources {
            srcDir 'src/integ/resources'
        }
    }
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
    testLogging.showStandardStreams = true
}

task regTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
    testLogging.showStandardStreams = true

    systemProperty 'regtest', true
    include 'com/msgilligan/bitcoin/rpc/**', 'com/msgilligan/bitcoin/cli/**'
}
