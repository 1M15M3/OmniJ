ext.groovyVersion = '2.4.3'

def groovydocSpec = {
    use = true
    if (project != rootProject) source = project.sourceSets.main.groovy + project.sourceSets.main.java
    groovyClasspath = project.configurations.jansi

    overview = rootProject.file('src/main/java/overview.html')
    includePrivate = false
    link 'http://docs.oracle.com/javase/7/docs/api/', 'java.', 'org.xml.', ' javax.xml.', 'javax.sql.', 'javax.net.', 'org.w3c.'
    link 'http://commons.apache.org/proper/commons-cli/javadocs/api-release/', 'org.apache.commons.cli.'
    link 'https://bitcoinj.github.io/javadoc/0.12.3/', 'org.bitcoin.', 'org.bitcoinj.'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'idea'

    repositories {
        jcenter()
        maven { url 'https://oss.jfrog.org/artifactory/oss-release-local' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/'}
    }

    configurations {
        // jansi configuration is a workaround for a broken transitive dependency
        // See: http://forums.gradle.org/gradle/topics/gradle_task_groovydoc_failing_with_noclassdeffounderror
        jansi.extendsFrom(runtime)
    }

    dependencies {
        compile "org.codehaus.groovy:groovy:${groovyVersion}"

        jansi 'org.fusesource.jansi:jansi:1.11'         // Transitive dependency of GroovyDoc
        jansi "org.codehaus.groovy:groovy-ant:${groovyVersion}"    // used in Groovy doc
    }

    groovydoc groovydocSpec
}

task groovydocAll(type: Groovydoc)
groovydocAll {
    destinationDir = new File(buildDir, 'allgroovydoc')
    source = groovydoc.source
    classpath = groovydoc.classpath
    groovyClasspath = groovydoc.groovyClasspath
    subprojects.each { sp ->
        source += sp.groovydoc.source
        classpath += sp.groovydoc.classpath
        groovyClasspath += sp.groovydoc.groovyClasspath
    }
}
groovydocAll groovydocSpec

subprojects {

    dependencies {
        compile 'org.bitcoinj:bitcoinj-core:0.13-SNAPSHOT'
        compile 'org.slf4j:slf4j-api:1.7.7'

        runtime 'org.slf4j:slf4j-jdk14:1.7.7'               // Runtime implementation of slf4j

        testRuntime 'org.slf4j:slf4j-jdk14:1.7.7'           // Runtime implementation of slf4j

        testCompile("org.spockframework:spock-core:1.0-groovy-2.4") {
            exclude module: "groovy-all"
        }
    }

    compileJava {
        options.compilerArgs << '-Xlint:unchecked'
    }

    test {
        // Disable the test report for the individual test task
//        reports.html.enabled = false
        // show standard out and standard error of the test JVM(s) on the console
        testLogging.showStandardStreams = true
    }
}

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/allTests")
    // Include the results from the `test` task in all subprojects
    reportOn subprojects*.test
}

idea {
    project {
        jdkName = '1.7'
        languageLevel = '1.7'
    }
}


